--------------Prac assign 3 -  Measures of central tendancy and variablity



import pandas as pd
import numpy as np
df=pd.read_csv('StudentPerformance.csv')
df
math score reading score writing score placement score club
join year \
0 73.0 77.0 79.0 88
2018.0
1 73.0 86.0 70.0 90
2019.0
2 75.0 81.0 73.0 84
2021.0
3 66.0 NaN 67.0 77
2019.0
4 64.0 84.0 78.0 86
2019.0
5 66.0 90.0 67.0 88
2020.0
6 76.0 75.0 73.0 82
NaN
7 63.0 82.0 73.0 94
2021.0
8 76.0 90.0 71.0 90
2019.0
9 69.0 201.0 72.0 77
2021.0
10 77.0 83.0 NaN 79
2020.0
11 70.0 78.0 74.0 94
2020.0
12 65.0 93.0 67.0 90
2021.0
13 66.0 94.0 72.0 86
2019.0
14 205.0 87.0 69.0 76
2020.0
15 74.0 77.0 67.0 90
2021.0
16 78.0 90.0 71.0 97
2020.0
17 77.0 87.0 78.0 99
2021.0
18 65.0 76.0 78.0 97

2019.0
19 77.0 92.0 79.0 80
2021.0
20 NaN 79.0 74.0 91
2020.0
21 73.0 77.0 69.0 93
2018.0
22 64.0 80.0 64.0 81
2020.0
23 63.0 83.0 62.0 79
2020.0
24 72.0 76.0 74.0 96
2019.0
25 69.0 82.0 72.0 85
2021.0
26 64.0 90.0 76.0 80
2018.0
27 67.0 81.0 79.0 88
2021.0
28 68.0 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0

27 3.0
28 2.0
df.isnull()
math score reading score writing score placement score club
join year \
0 False False False False
False
1 False False False False
False
2 False False False False
False
3 False True False False
False
4 False False False False
False
5 False False False False
False
6 False False False False
True
7 False False False False
False
8 False False False False
False
9 False False False False
False
10 False False True False
False
11 False False False False
False
12 False False False False
False
13 False False False False
False
14 False False False False
False
15 False False False False
False
16 False False False False
False
17 False False False False
False
18 False False False False
False
19 False False False False
False
20 True False False False
False
21 False False False False
False

22 False False False False
False
23 False False False False
False
24 False False False False
False
25 False False False False
False
26 False False False False
False
27 False False False False
False
28 False False False False
False
placemnet offer count
0 False
1 False
2 False
3 False
4 False
5 False
6 False
7 False
8 False
9 False
10 False
11 True
12 False
13 False
14 False
15 False
16 False
17 False
18 False
19 False
20 False
21 False
22 False
23 False
24 False
25 False
26 False
27 False
28 False
series=pd.isnull(df['math score'])
df[series]

math score reading score writing score placement score club
join year \
20 NaN 79.0 74.0 91
2020.0
placemnet offer count
20 3.0
ndf=df
ndf.fillna(0)
math score reading score writing score placement score club
join year \
0 73.0 77.0 79.0 88
2018.0
1 73.0 86.0 70.0 90
2019.0
2 75.0 81.0 73.0 84
2021.0
3 66.0 0.0 67.0 77
2019.0
4 64.0 84.0 78.0 86
2019.0
5 66.0 90.0 67.0 88
2020.0
6 76.0 75.0 73.0 82
0.0
7 63.0 82.0 73.0 94
2021.0
8 76.0 90.0 71.0 90
2019.0
9 69.0 201.0 72.0 77
2021.0
10 77.0 83.0 0.0 79
2020.0
11 70.0 78.0 74.0 94
2020.0
12 65.0 93.0 67.0 90
2021.0
13 66.0 94.0 72.0 86
2019.0
14 205.0 87.0 69.0 76
2020.0
15 74.0 77.0 67.0 90
2021.0
16 78.0 90.0 71.0 97
2020.0
17 77.0 87.0 78.0 99
2021.0
18 65.0 76.0 78.0 97

2019.0
19 77.0 92.0 79.0 80
2021.0
20 0.0 79.0 74.0 91
2020.0
21 73.0 77.0 69.0 93
2018.0
22 64.0 80.0 64.0 81
2020.0
23 63.0 83.0 62.0 79
2020.0
24 72.0 76.0 74.0 96
2019.0
25 69.0 82.0 72.0 85
2021.0
26 64.0 90.0 76.0 80
2018.0
27 67.0 81.0 79.0 88
2021.0
28 68.0 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 0.0
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0

27 3.0
28 2.0
#FILLING MISSING VALUES USING MEAN
df['math score']=df['math score'].fillna(df['math score'].mean())
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91

2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0

#USING MEDIAN
df['math score']=df['math score'].fillna(df['math score'].median())
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0

22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#USING STD
df['math score']=df['math score'].fillna(df['math score'].std())
df

math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0

24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
df['math score']=df['math score'].fillna(df['math score'].min())
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90

2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80

2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
df['math score']=df['math score'].fillna(df['math score'].max())
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0

4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0

placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#FILLING NULL VALUE IN DATASET
m_v=df['math score'].mean()
df['math score'].fillna(value=m_v,inplace=True)
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0

5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count

0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#DELETING THE NULL VALUES USING DROPNA()
ndf.dropna()
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0

12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
4 3.0
5 3.0
7 3.0
8 3.0
9 2.0
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0

18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#drop row if all the values are missing
ndf.dropna(how='all')
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0
4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0

17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0

24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
ndf.dropna(axis=1)
math score placement score
0 73.000000 88
1 73.000000 90
2 75.000000 84
3 66.000000 77
4 64.000000 86
5 66.000000 88
6 76.000000 82
7 63.000000 94
8 76.000000 90
9 69.000000 77
10 77.000000 79
11 70.000000 94
12 65.000000 90
13 66.000000 86
14 205.000000 76
15 74.000000 90
16 78.000000 97
17 77.000000 99
18 65.000000 97
19 77.000000 80
20 74.821429 91
21 73.000000 93
22 64.000000 81
23 63.000000 79
24 72.000000 96
25 69.000000 85
26 64.000000 80
27 67.000000 88
28 68.000000 80
df
math score reading score writing score placement score club
join year \
0 73.000000 77.0 79.0 88
2018.0
1 73.000000 86.0 70.0 90
2019.0
2 75.000000 81.0 73.0 84
2021.0
3 66.000000 NaN 67.0 77
2019.0

4 64.000000 84.0 78.0 86
2019.0
5 66.000000 90.0 67.0 88
2020.0
6 76.000000 75.0 73.0 82
NaN
7 63.000000 82.0 73.0 94
2021.0
8 76.000000 90.0 71.0 90
2019.0
9 69.000000 201.0 72.0 77
2021.0
10 77.000000 83.0 NaN 79
2020.0
11 70.000000 78.0 74.0 94
2020.0
12 65.000000 93.0 67.0 90
2021.0
13 66.000000 94.0 72.0 86
2019.0
14 205.000000 87.0 69.0 76
2020.0
15 74.000000 77.0 67.0 90
2021.0
16 78.000000 90.0 71.0 97
2020.0
17 77.000000 87.0 78.0 99
2021.0
18 65.000000 76.0 78.0 97
2019.0
19 77.000000 92.0 79.0 80
2021.0
20 74.821429 79.0 74.0 91
2020.0
21 73.000000 77.0 69.0 93
2018.0
22 64.000000 80.0 64.0 81
2020.0
23 63.000000 83.0 62.0 79
2020.0
24 72.000000 76.0 74.0 96
2019.0
25 69.000000 82.0 72.0 85
2021.0
26 64.000000 90.0 76.0 80
2018.0
27 67.000000 81.0 79.0 88
2021.0
28 68.000000 81.0 77.0 80
2020.0

placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#DETECTING OUTLIERS USING THE BOCPLOT
col=['math score','reading score','writing score','placement score']
df.boxplot(col)
<AxesSubplot:ylabel='Frequency'>
df.boxplot(col)
<AxesSubplot:ylabel='Frequency'>
#printing the outliers
print(np.where(df['math score']>90))
print(np.where(df['reading score']<25))
print(np.where(df['writing score']<30))
(array([14], dtype=int64),)
(array([], dtype=int64),)
(array([], dtype=int64),)
import matplotlib.pyplot as plt

new_df['math score'].plot(kind="hist")
<AxesSubplot:ylabel='Frequency'>
df['log_math'] = np.log10(df['math score'])
df['log_math'].plot(kind = 'hist')
<AxesSubplot:ylabel='Frequency'>