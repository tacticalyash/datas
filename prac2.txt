
-----------------------Prac assign - 2 {student dataset}

import pandas as pd
import numpy as np
#LOAD THE DATASET IN DF
df=pd.read_csv("StudentPerformance.csv")
#DISPLAY THE DATAFRAME
df

12 3.0
13 3.0`
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0

24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#CHECK THE NULL VALUES
df.isnull()
math score reading score writing score placement score club
join year \
0 False False False False
False
1 False False False False
False
2 False False False False
False
3 False True False False
False
4 False False False False
False
5 False False False False
False
6 False False False False
True
7 False False False False
False
8 False False False False
False
9 False False False False
False
10 False False True False
False
11 False False False False
False
12 False False False False
False
13 False False False False
False
14 False False False False
False
15 False False False False
False
16 False False False False
False
17 False False False False
False
18 False False False False
False
19 False False False False
False

20 True False False False
False
21 False False False False
False
22 False False False False
False
23 False False False False
False
24 False False False False
False
25 False False False False
False
26 False False False False
False
27 False False False False
False
28 False False False False
False
placemnet offer count
0 False
1 False
2 False
3 False
4 False
5 False
6 False
7 False
8 False
9 False
10 False
11 True
12 False
13 False
14 False
15 False
16 False
17 False
18 False
19 False
20 False
21 False
22 False
23 False
24 False
25 False
26 False
27 False
28 False

#replace the true as NaN
series=pd.isnull(df["math score"])
df[series]
math score reading score writing score placement score club
join year \
20 NaN 79.0 74.0 91
2020.0
placemnet offer count
20 3.0
#NOT NULL-is written false for null value
df.notnull()
math score reading score writing score placement score club
join year \
0 True True True True
True
1 True True True True
True
2 True True True True
True
3 True False True True
True
4 True True True True
True
5 True True True True
True
6 True True True True
False
7 True True True True
True
8 True True True True
True
9 True True True True
True
10 True True False True
True
11 True True True True
True
12 True True True True
True
13 True True True True
True
14 True True True True
True
15 True True True True
True
16 True True True True

True
17 True True True True
True
18 True True True True
True
19 True True True True
True
20 False True True True
True
21 True True True True
True
22 True True True True
True
23 True True True True
True
24 True True True True
True
25 True True True True
True
26 True True True True
True
27 True True True True
True
28 True True True True
True
placemnet offer count
0 True
1 True
2 True
3 True
4 True
5 True
6 True
7 True
8 True
9 True
10 True
11 False
12 True
13 True
14 True
15 True
16 True
17 True
18 True
19 True
20 True
21 True
22 True

23 True
24 True
25 True
26 True
27 True
28 True
#covert the false to NaN
series1=pd.notnull(df['math score'])
df[series1]
math score reading score writing score placement score club
join year \
0 73.0 77.0 79.0 88
2018.0
1 73.0 86.0 70.0 90
2019.0
2 75.0 81.0 73.0 84
2021.0
3 66.0 NaN 67.0 77
2019.0
4 64.0 84.0 78.0 86
2019.0
5 66.0 90.0 67.0 88
2020.0
6 76.0 75.0 73.0 82
NaN
7 63.0 82.0 73.0 94
2021.0
8 76.0 90.0 71.0 90
2019.0
9 69.0 201.0 72.0 77
2021.0
10 77.0 83.0 NaN 79
2020.0
11 70.0 78.0 74.0 94
2020.0
12 65.0 93.0 67.0 90
2021.0
13 66.0 94.0 72.0 86
2019.0
14 205.0 87.0 69.0 76
2020.0
15 74.0 77.0 67.0 90
2021.0
16 78.0 90.0 71.0 97
2020.0
17 77.0 87.0 78.0 99
2021.0
18 65.0 76.0 78.0 97

2019.0
19 77.0 92.0 79.0 80
2021.0
21 73.0 77.0 69.0 93
2018.0
22 64.0 80.0 64.0 81
2020.0
23 63.0 83.0 62.0 79
2020.0
24 72.0 76.0 74.0 96
2019.0
25 69.0 82.0 72.0 85
2021.0
26 64.0 90.0 76.0 80
2018.0
27 67.0 81.0 79.0 88
2021.0
28 68.0 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0

#FOR CATEGORICAL VALUE USE LABEL ENCODER
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df['math score']=le.fit_transform(df['math score'])
newdf=df
df
math score reading score writing score placement score club
join year \
0 9 77.0 79.0 88
2018.0
1 9 86.0 70.0 90
2019.0
2 11 81.0 73.0 84
2021.0
3 3 NaN 67.0 77
2019.0
4 1 84.0 78.0 86
2019.0
5 3 90.0 67.0 88
2020.0
6 12 75.0 73.0 82
NaN
7 0 82.0 73.0 94
2021.0
8 12 90.0 71.0 90
2019.0
9 6 201.0 72.0 77
2021.0
10 13 83.0 NaN 79
2020.0
11 7 78.0 74.0 94
2020.0
12 2 93.0 67.0 90
2021.0
13 3 94.0 72.0 86
2019.0
14 15 87.0 69.0 76
2020.0
15 10 77.0 67.0 90
2021.0
16 14 90.0 71.0 97
2020.0
17 13 87.0 78.0 99
2021.0
18 2 76.0 78.0 97
2019.0

19 13 92.0 79.0 80
2021.0
20 16 79.0 74.0 91
2020.0
21 9 77.0 69.0 93
2018.0
22 1 80.0 64.0 81
2020.0
23 0 83.0 62.0 79
2020.0
24 8 76.0 74.0 96
2019.0
25 6 82.0 72.0 85
2021.0
26 1 90.0 76.0 80
2018.0
27 4 81.0 79.0 88
2021.0
28 5 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0

27 3.0
28 2.0
#FILLINF MISSING VALUE USING dropna(),fillna(),replace()
#REPLACE NULL VALUES WITH NaN
missing_values=["Na","na"]
na_values=missing_values
df
math score reading score writing score placement score club
join year \
0 9 77.0 79.0 88
2018.0
1 9 86.0 70.0 90
2019.0
2 11 81.0 73.0 84
2021.0
3 3 NaN 67.0 77
2019.0
4 1 84.0 78.0 86
2019.0
5 3 90.0 67.0 88
2020.0
6 12 75.0 73.0 82
NaN
7 0 82.0 73.0 94
2021.0
8 12 90.0 71.0 90
2019.0
9 6 201.0 72.0 77
2021.0
10 13 83.0 NaN 79
2020.0
11 7 78.0 74.0 94
2020.0
12 2 93.0 67.0 90
2021.0
13 3 94.0 72.0 86
2019.0
14 15 87.0 69.0 76
2020.0
15 10 77.0 67.0 90
2021.0
16 14 90.0 71.0 97
2020.0
17 13 87.0 78.0 99
2021.0
18 2 76.0 78.0 97
2019.0

19 13 92.0 79.0 80
2021.0
20 16 79.0 74.0 91
2020.0
21 9 77.0 69.0 93
2018.0
22 1 80.0 64.0 81
2020.0
23 0 83.0 62.0 79
2020.0
24 8 76.0 74.0 96
2019.0
25 6 82.0 72.0 85
2021.0
26 1 90.0 76.0 80
2018.0
27 4 81.0 79.0 88
2021.0
28 5 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0

27 3.0
28 2.0
#filling null values with single value
ndf=df
ndf.fillna(0)
math score reading score writing score placement score club
join year \
0 9 77.0 79.0 88
2018.0
1 9 86.0 70.0 90
2019.0
2 11 81.0 73.0 84
2021.0
3 3 0.0 67.0 77
2019.0
4 1 84.0 78.0 86
2019.0
5 3 90.0 67.0 88
2020.0
6 12 75.0 73.0 82
0.0
7 0 82.0 73.0 94
2021.0
8 12 90.0 71.0 90
2019.0
9 6 201.0 72.0 77
2021.0
10 13 83.0 0.0 79
2020.0
11 7 78.0 74.0 94
2020.0
12 2 93.0 67.0 90
2021.0
13 3 94.0 72.0 86
2019.0
14 15 87.0 69.0 76
2020.0
15 10 77.0 67.0 90
2021.0
16 14 90.0 71.0 97
2020.0
17 13 87.0 78.0 99
2021.0
18 2 76.0 78.0 97
2019.0
19 13 92.0 79.0 80
2021.0
20 16 79.0 74.0 91

2020.0
21 9 77.0 69.0 93
2018.0
22 1 80.0 64.0 81
2020.0
23 0 83.0 62.0 79
2020.0
24 8 76.0 74.0 96
2019.0
25 6 82.0 72.0 85
2021.0
26 1 90.0 76.0 80
2018.0
27 4 81.0 79.0 88
2021.0
28 5 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 0.0
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
m_v=df['math score'].mean()

df['math score'].fillna(value=m_v,inplace=True)
df
math score reading score writing score placement score club
join year \
0 9 77.0 79.0 88
2018.0
1 9 86.0 70.0 90
2019.0
2 11 81.0 73.0 84
2021.0
3 3 NaN 67.0 77
2019.0
4 1 84.0 78.0 86
2019.0
5 3 90.0 67.0 88
2020.0
6 12 75.0 73.0 82
NaN
7 0 82.0 73.0 94
2021.0
8 12 90.0 71.0 90
2019.0
9 6 201.0 72.0 77
2021.0
10 13 83.0 NaN 79
2020.0
11 7 78.0 74.0 94
2020.0
12 2 93.0 67.0 90
2021.0
13 3 94.0 72.0 86
2019.0
14 15 87.0 69.0 76
2020.0
15 10 77.0 67.0 90
2021.0
16 14 90.0 71.0 97
2020.0
17 13 87.0 78.0 99
2021.0
18 2 76.0 78.0 97
2019.0
19 13 92.0 79.0 80
2021.0
20 16 79.0 74.0 91
2020.0
21 9 77.0 69.0 93
2018.0
22 1 80.0 64.0 81

2020.0
23 0 83.0 62.0 79
2020.0
24 8 76.0 74.0 96
2019.0
25 6 82.0 72.0 85
2021.0
26 1 90.0 76.0 80
2018.0
27 4 81.0 79.0 88
2021.0
28 5 81.0 77.0 80
2020.0
placemnet offer count
0 3.0
1 3.0
2 2.0
3 2.0
4 3.0
5 3.0
6 2.0
7 3.0
8 3.0
9 2.0
10 2.0
11 NaN
12 3.0
13 3.0
14 2.0
15 3.0
16 3.0
17 3.0
18 3.0
19 2.0
20 3.0
21 3.0
22 2.0
23 2.0
24 3.0
25 3.0
26 2.0
27 3.0
28 2.0
#DETECTING OUTLIERS
#USING BOXPLOT
df


col=['math score','reading score','writing score','placement score']
df.boxplot(col)
<AxesSubplot:>

#printing the outliers
print(np.where(df['math score']>90))
(array([], dtype=int64),)
print(np.where(df['reading score']<25))
(array([], dtype=int64),)
print(np.where(df['writing score']<30))
(array([], dtype=int64),)
#USING SCATTER PLOT
import matplotlib.pyplot as plt
df


fig, ax = plt.subplots(figsize = (18,10))
ax.scatter(df['placement score'], df['placemnet offer count'])
plt.show()
ax.set_xlabel('(Proportion non-retail business acres)/(town)')
ax.set_ylabel('(Full-value property-tax rate)/( $10,000)')


#USING Z-SCORE
import numpy as np
from scipy import stats
z = np.abs(stats.zscore(df['math score']))
print(z)



sample_outliers = np.where(z <threshold)
sample_outliers
(array([11, 24], dtype=int64),)